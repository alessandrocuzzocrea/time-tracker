/* tslint:disable */
/* eslint-disable */
/**
 * TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface TimeEntryCreateRequest
 */
export interface TimeEntryCreateRequest {
  /**
   *
   * @type {number}
   * @memberof TimeEntryCreateRequest
   */
  taskId?: number;
  /**
   *
   * @type {string}
   * @memberof TimeEntryCreateRequest
   */
  description?: string | null;
  /**
   *
   * @type {Date}
   * @memberof TimeEntryCreateRequest
   */
  startAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof TimeEntryCreateRequest
   */
  endAt?: Date | null;
}

/**
 * Check if a given object implements the TimeEntryCreateRequest interface.
 */
export function instanceOfTimeEntryCreateRequest(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function TimeEntryCreateRequestFromJSON(json: any): TimeEntryCreateRequest {
  return TimeEntryCreateRequestFromJSONTyped(json, false);
}

export function TimeEntryCreateRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): TimeEntryCreateRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    taskId: !exists(json, 'taskId') ? undefined : json['taskId'],
    description: !exists(json, 'description') ? undefined : json['description'],
    startAt: !exists(json, 'startAt') ? undefined : new Date(json['startAt']),
    endAt: !exists(json, 'endAt')
      ? undefined
      : json['endAt'] === null
      ? null
      : new Date(json['endAt'])
  };
}

export function TimeEntryCreateRequestToJSON(value?: TimeEntryCreateRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    taskId: value.taskId,
    description: value.description,
    startAt: value.startAt === undefined ? undefined : value.startAt.toISOString(),
    endAt:
      value.endAt === undefined
        ? undefined
        : value.endAt === null
        ? null
        : value.endAt.toISOString()
  };
}
